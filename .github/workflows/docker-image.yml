name: DOCKER IMAGE CI FOR GHCR

on: push
permissions:
  contents: read # for actions/checkout to fetch code
  security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
  issues: write
jobs:
    phpsast_advanced:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Setup PHP with PECL extension
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.1'
            extensions: gd
        - uses: php-actions/composer@v6
          with:
            verion: 2.7.5
            args: --profile --ignore-platform-reqs


        - name: scan lint
          continue-on-error: true
          run: |
            composer update
            composer require --dev php-parallel-lint/php-parallel-lint
            vendor/bin/parallel-lint . > parallel-lint-results.txt

        - name: Upload parallel lint scan results
          uses: actions/upload-artifact@v4
          with:
            name: parallel-lint-results
            path: parallel-lint-results.txt
        
        - name: larastan 
          continue-on-error: true
          run: |
            composer require larastan/larastan:^2.0 --dev
            ./vendor/bin/phpstan analyse --error-format=table > larastan-results.txt
        - name: Upload larastan scan results
          uses: actions/upload-artifact@v4
          with:
            name: larastan-results
            path: larastan-results.txt

        - name: scan with noverify
          continue-on-error: true
          run: |
            composer require --dev vkcom/noverify
            ./vendor/bin/noverify-get
            ./vendor/bin/noverify check --output='noverify-results.txt' .

        - name: Upload NoVerify scan results
          uses: actions/upload-artifact@v4
          with:
            name: noverify-results
            path: noverify-results.txt
    secret-repo-check:
      continue-on-error: true
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3  
        - name: trufflehog find secret
          id: trufflesecrets
          run: |
            curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
            trufflehog filesystem . > trufflehog-result.txt
        - name: Upload lphp-results scan results
          uses: actions/upload-artifact@v4
          with:
            name: trufflehog-result
            path: trufflehog-result.txt

    lint-php-check:
      needs: [secret-repo-check]   
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Lint PHP files
          run: |
            curl -Ls https://github.com/overtrue/phplint/releases/latest/download/phplint.phar -o /usr/local/bin/phplint
            chmod +x /usr/local/bin/phplint
            /usr/local/bin/phplint --no-cache --no-progress --exclude=vendor --log-sarif=php-log-sarif.sarif -v
        - name: Upload NoVerify scan results
          uses: actions/upload-artifact@v4
          with:
            name: php-log-sarif
            path: php-log-sarif.sarif
    dep-analyze:
      needs: [lint-php-check]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Local PHP Security Checker
          uses: docker://pplotka/local-php-security-checker-github-actions
          with:
            format: markdown
        - name: save last step artifact
          run: | 
            echo "${{ steps.local_php_security_checker.outputs.security }}" > lphp-results.md
        
        - name: Upload lphp-results scan results
          uses: actions/upload-artifact@v4
          with:
            name: lphp-results
            path: lphp-results.md

        - name: scan with composer audit
          continue-on-error: true
          run: |
            composer audit > composer-audit-result.txt

        - uses: actions/cache@v2
          id: cache-db
          with:
              path: ~/.symfony/cache
              key: db
        - uses: symfonycorp/security-checker-action@v5
    
        - name: Display the vulnerabilities as JSON
          run: echo ${{ steps.security-check.outputs.vulns }} > security-checker.json
        
        - name: Upload symfonycorp/security-checker scan results
          uses: actions/upload-artifact@v4
          with:
            name: security-checker
            path: security-checker.json     
              
    trivy-analyze-repo:
      needs: [lint-php-check, dep-analyze]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Run Trivy vulnerability scanner in repo mode
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'fs'
            ignore-unfixed: true
            format: 'sarif'
            output: 'trivy-fs-results.sarif'
        - name: Upload Trivy-fs Report
          uses: actions/upload-artifact@v4
          with:
            name: trivy-fs-results
            path: trivy-fs-results.sarif   

    codacy-sast:
      needs: [lint-php-check, dep-analyze]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: codacy sast  
          uses: codacy/codacy-analysis-cli-action@master
          with:
            project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
            verbose: true
            output: codacy-results.sarif
            format: sarif
            # Adjust severity of non-security issues
            gh-code-scanning-compat: true
            # Force 0 exit code to allow SARIF file generation
            # This will hand over control about PR rejection to the GitHub side
            max-allowed-issues: 2147483647
        - name: Upload Codacy Report
          uses: actions/upload-artifact@v4
          with:
            name: codacy-results
            path: codacy-results.sarif  
        - name: Upload Codacy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'codacy-results.sarif'

    bearer-sast:
      needs: [lint-php-check, dep-analyze]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: BEARER scan
          uses: bearer/bearer-action@v2
          with:
            format: sarif
            output: bearer-results.sarif
            severity: critical,high,medium,low,warning
            quiet: false
            hide-progress-bar: false
            exit-code: 0
        - name: Upload Bearer scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'bearer-results.sarif'
        - name: Upload Bearer Report
          uses: actions/upload-artifact@v4
          with:
            name: bearer-results
            path: bearer-results.sarif  

    build_and_publish_apache:
      runs-on: ubuntu-latest
      needs: [bearer-sast,codacy-sast,trivy-analyze-repo]
      steps:
        - uses: actions/checkout@v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: login GHCR
          run: |
            docker login --username dessybin --password ${{ secrets.GH_PAT }} ghcr.io
        - name: BUILD DOCKER
          uses: docker/build-push-action@v5
          with:
            context: .
            file: .docker/apache-conf/apache.dockerfile
            push: true
            tags: ghcr.io/dessybin/apache_wintercms:latest
            cache-from: type=registry,ref=ghcr.io/dessybin/apache_wintercms:buildcache
            cache-to: type=registry,ref=ghcr.io/dessybin/apache_wintercms:buildcache,mode=max
        - name: Logout
          run: |
            docker logout ghcr.io

    container-check-apache:
      runs-on: ubuntu-latest
      needs: build_and_publish_apache
      steps:
        - name: login GHCR
          run: |
            docker login --username dessybin --password ${{ secrets.GH_PAT }} ghcr.io
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'ghcr.io/dessybin/apache_wintercms:latest'
            format: 'sarif'
            output: 'trivy-results-apache.sarif'
          env:
            TRIVY_USERNAME: dessybin
            TRIVY_PASSWORD: ${{ secrets.GH_PAT }}
        - name: Upload Trivy-apache Report
          uses: actions/upload-artifact@v4
          with:
            name: trivy-results-apache
            path: trivy-results-apache.sarif
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'trivy-results-apache.sarif'  
        - name: Logout
          run: |
            docker logout ghcr.io

    build_and_publish_php:
      runs-on: ubuntu-latest
      needs: [bearer-sast,codacy-sast,trivy-analyze-repo]
      steps:
        - uses: actions/checkout@v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: login GHCR
          run: |
            docker login --username dessybin --password ${{ secrets.GH_PAT }} ghcr.io
        - name: BUILD DOCKER
          uses: docker/build-push-action@v5
          with:
            context: .
            file: .docker/php/php.dockerfile
            push: true
            tags: ghcr.io/dessybin/php_wintercms:latest
            cache-from: type=registry,ref=ghcr.io/dessybin/php_wintercms:buildcache
            cache-to: type=registry,ref=ghcr.io/dessybin/php_wintercms:buildcache,mode=max
        - name: Logout
          run: |
            docker logout ghcr.io

    container-check-php:
      runs-on: ubuntu-latest
      needs: build_and_publish_php
      steps:
        - name: login GHCR
          run: |
            docker login --username dessybin --password ${{ secrets.GH_PAT }} ghcr.io          
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'ghcr.io/dessybin/php_wintercms:latest'
            format: 'sarif'
            output: 'trivy-results-php.sarif'
          env:
            TRIVY_USERNAME: dessybin
            TRIVY_PASSWORD: ${{ secrets.GH_PAT }}
        - name: Upload Trivy-php Report
          uses: actions/upload-artifact@v4
          with:
            name: trivy-results-php
            path: trivy-results-php.sarif
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'trivy-results-php.sarif'        
#
    #deploy:
    #  needs: [container-check-php, container-check-apache] 
    #  runs-on: ubuntu-latest
    #  steps:
    #    - uses: actions/checkout@v4          
    #    - name: executing remote ssh commands using password
    #      uses: appleboy/ssh-action@v1.0.3
    #      with:
    #        host: ${{ secrets.SSH_HOST }}
    #        username: ${{ secrets.SSH_USER }}
    #        passphrase: ${{ secrets.SSH_PASSPH }}
    #        key: ${{ secrets.SSH_PRIVATE_KEY }}
    #        script: /home/deployuser/app/.docker/startup.sh
#
    dast_owasp_zap:
      runs-on: ubuntu-latest
      steps:
        - name: ZAP Scan
          uses: zaproxy/action-full-scan@v0.10.0
          with:
            artifact_name: owasp-zap-results
            target: 'http://87.249.53.20/'
    upload-reports:
      needs: [dast_owasp_zap]
      runs-on: ubuntu-latest
      steps:
        - name: download artifact zap
          uses: actions/download-artifact@master
          with:
            name: owasp-zap-results      
        - name: Sleep for 10s
          uses: juliangruber/sleep-action@v2.0.0
          with:
            time: 10s
        - name: download artifact apache
          uses: actions/download-artifact@master
          with:
            name: trivy-results-apache
        - name: download artifact fs
          uses: actions/download-artifact@master
          with:
            name: trivy-fs-results
        - name: download artifact php
          uses: actions/download-artifact@master
          with:
            name: trivy-results-php
        - name: download artifact codacy
          uses: actions/download-artifact@master
          with:
            name: codacy-results
        - name: download artifact bearer
          uses: actions/download-artifact@master
          with:
            name: bearer-results

        - name: download artifact php linter
          uses: actions/download-artifact@master
          with:
            name: php-log-sarif           
        - name: Get current date
          id: date
          run: echo “::set-output name=date::$(date +’%Y-%m-%d’)”
        - name: upload to faraday
          run: |
            pip install faraday-cli
            faraday-cli auth -f http://87.249.53.20:5985 -u ${{ secrets.FARADAY_USERNAME }} -p ${{ secrets.FARADAY_PASSWORD }}
            faraday-cli workspace create ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }}
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} trivy-results-php.sarif
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} trivy-results-apache.sarif
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} trivy-fs-results.sarif
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} codacy-results.sarif
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} bearer-results.sarif
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} report_json.json
            faraday-cli tool report -w ${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.run_number }} php-log-sarif.sarif        